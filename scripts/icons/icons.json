[
  [
    "IconCheck",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconCheck = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.8 4.20005C13.9221 4.32467 13.9905 4.49221 13.9905 4.66671C13.9905 4.84121 13.9221 5.00876 13.8 5.13338L7.13331 11.8C7.00869 11.9222 6.84114 11.9906 6.66664 11.9906C6.49214 11.9906 6.32459 11.9222 6.19998 11.8L2.86664 8.46671C2.79023 8.4094 2.72703 8.33634 2.68131 8.25248C2.63559 8.16862 2.60842 8.07591 2.60165 7.98064C2.59488 7.88536 2.60866 7.78975 2.64206 7.70026C2.67546 7.61078 2.7277 7.52951 2.79524 7.46197C2.86278 7.39444 2.94404 7.3422 3.03353 7.3088C3.12301 7.2754 3.21863 7.26162 3.3139 7.26839C3.40918 7.27516 3.50188 7.30233 3.58575 7.34804C3.66961 7.39376 3.74267 7.45697 3.79998 7.53338L6.66664 10.3934L12.8666 4.19338C12.9913 4.07123 13.1588 4.00281 13.3333 4.00281C13.5078 4.00281 13.6754 4.07123 13.8 4.19338\"/></Icon>\n);",
    "figma.connect(IconCheck, \"<FIGMA_ICONS_BASE>?node-id=27:214\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconCheck size={size} /> });"
  ],
  [
    "IconMessages",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconMessages = (props: IconProps) => (\n  <Icon {...props}><path d=\"M4.66665 6.00004V7.33337H2.66665V12.3894L3.52858 11.5286C3.63221 11.425 3.7671 11.3584 3.91238 11.3392L3.99998 11.3334H8.66665V9.33337H9.99998V11.3334C9.99998 12.0363 9.45605 12.6122 8.76618 12.663L8.66665 12.6667H4.27598L2.47138 14.4714C2.06965 14.8732 1.39518 14.6185 1.33731 14.0758L1.33331 14V7.33337C1.33331 6.63044 1.87725 6.05457 2.56711 6.00371L2.66665 6.00004H4.66665ZM13.3333 1.33337C14.0362 1.33337 14.6121 1.87731 14.663 2.56717L14.6666 2.66671V9.33337L14.6655 9.37271L14.6622 9.41111L14.6562 9.45097L14.649 9.48624L14.6278 9.55824L14.61 9.60264L14.5628 9.69077L14.5202 9.75031L14.4714 9.80477L14.4086 9.86024L14.3574 9.89624L14.2932 9.93224L14.2692 9.94344L14.2248 9.96117L14.1528 9.98244L14.1176 9.98964L14.0777 9.99557L14.0393 9.99891L14 10L13.9606 9.99891L13.9222 9.99557L13.8824 9.98964L13.8471 9.98244L13.7751 9.96117L13.7307 9.94344L13.6426 9.89624L13.583 9.85357L13.5286 9.80477L11.7233 8.00004H7.33331C6.63038 8.00004 6.05451 7.45611 6.00365 6.76624L5.99998 6.66671V2.66671C5.99998 1.96377 6.54391 1.38791 7.23378 1.33704L7.33331 1.33337H13.3333ZM13.3333 2.66671H7.33331V6.66671H12C12.1465 6.6667 12.289 6.71496 12.4053 6.80404L12.4714 6.86197L13.3333 7.72337V2.66671Z\"/></Icon>\n);",
    "figma.connect(IconMessages, \"<FIGMA_ICONS_BASE>?node-id=27:311\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconMessages size={size} /> });"
  ],
  [
    "IconPoints",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconPoints = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2 10.6667C2 9.95946 2.28095 9.28119 2.78105 8.78109C3.28115 8.28099 3.95942 8.00004 4.66667 8.00004C5.37391 8.00004 6.05219 8.28099 6.55229 8.78109C7.05238 9.28119 7.33333 9.95946 7.33333 10.6667C7.33333 11.374 7.05238 12.0522 6.55229 12.5523C6.05219 13.0524 5.37391 13.3334 4.66667 13.3334C3.95942 13.3334 3.28115 13.0524 2.78105 12.5523C2.28095 12.0522 2 11.374 2 10.6667ZM6 10.6667C6 10.3131 5.85952 9.97395 5.60948 9.7239C5.35943 9.47385 5.02029 9.33337 4.66667 9.33337C4.31304 9.33337 3.97391 9.47385 3.72386 9.7239C3.47381 9.97395 3.33333 10.3131 3.33333 10.6667C3.33333 11.0203 3.47381 11.3595 3.72386 11.6095C3.97391 11.8596 4.31304 12 4.66667 12C5.02029 12 5.35943 11.8596 5.60948 11.6095C5.85952 11.3595 6 11.0203 6 10.6667ZM9.33333 12.6667C9.33333 12.1363 9.54405 11.6276 9.91912 11.2525C10.2942 10.8774 10.8029 10.6667 11.3333 10.6667C11.8638 10.6667 12.3725 10.8774 12.7475 11.2525C13.1226 11.6276 13.3333 12.1363 13.3333 12.6667C13.3333 13.1971 13.1226 13.7058 12.7475 14.0809C12.3725 14.456 11.8638 14.6667 11.3333 14.6667C10.8029 14.6667 10.2942 14.456 9.91912 14.0809C9.54405 13.7058 9.33333 13.1971 9.33333 12.6667ZM12 12.6667C12 12.4899 11.9298 12.3203 11.8047 12.1953C11.6797 12.0703 11.5101 12 11.3333 12C11.1565 12 10.987 12.0703 10.8619 12.1953C10.7369 12.3203 10.6667 12.4899 10.6667 12.6667C10.6667 12.8435 10.7369 13.0131 10.8619 13.1381C10.987 13.2631 11.1565 13.3334 11.3333 13.3334C11.5101 13.3334 11.6797 13.2631 11.8047 13.1381C11.9298 13.0131 12 12.8435 12 12.6667ZM6.66667 5.00004C6.66667 4.02758 7.05298 3.09495 7.74061 2.40732C8.42824 1.71968 9.36087 1.33337 10.3333 1.33337C11.3058 1.33337 12.2384 1.71968 12.9261 2.40732C13.6137 3.09495 14 4.02758 14 5.00004C14 5.9725 13.6137 6.90513 12.9261 7.59277C12.2384 8.2804 11.3058 8.66671 10.3333 8.66671C9.36087 8.66671 8.42824 8.2804 7.74061 7.59277C7.05298 6.90513 6.66667 5.9725 6.66667 5.00004ZM12.6667 5.00004C12.6667 4.69362 12.6063 4.39021 12.4891 4.10711C12.3718 3.82402 12.1999 3.56679 11.9832 3.35012C11.7666 3.13345 11.5094 2.96158 11.2263 2.84432C10.9432 2.72706 10.6398 2.66671 10.3333 2.66671C10.0269 2.66671 9.7235 2.72706 9.44041 2.84432C9.15731 2.96158 8.90009 3.13345 8.68342 3.35012C8.46675 3.56679 8.29488 3.82402 8.17761 4.10711C8.06035 4.39021 8 4.69362 8 5.00004C8 5.61888 8.24583 6.21237 8.68342 6.64996C9.121 7.08754 9.7145 7.33337 10.3333 7.33337C10.9522 7.33337 11.5457 7.08754 11.9832 6.64996C12.4208 6.21237 12.6667 5.61888 12.6667 5.00004Z\"/></Icon>\n);",
    "figma.connect(IconPoints, \"<FIGMA_ICONS_BASE>?node-id=27:198\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconPoints size={size} /> });"
  ],
  [
    "IconCart",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconCart = (props: IconProps) => (\n  <Icon {...props}><path d=\"M13.3333 13.3334C13.3333 13.5971 13.2551 13.8549 13.1086 14.0741C12.9621 14.2934 12.7539 14.4643 12.5102 14.5652C12.2666 14.6661 11.9985 14.6925 11.7399 14.6411C11.4812 14.5897 11.2437 14.4627 11.0572 14.2762C10.8707 14.0897 10.7437 13.8521 10.6923 13.5935C10.6408 13.3349 10.6672 13.0668 10.7682 12.8231C10.8691 12.5795 11.04 12.3713 11.2592 12.2248C11.4785 12.0783 11.7363 12.0001 12 12.0001C12.3536 12.0001 12.6928 12.1405 12.9428 12.3906C13.1929 12.6406 13.3333 12.9798 13.3333 13.3334ZM5.33333 12.0001C5.06962 12.0001 4.81183 12.0783 4.59257 12.2248C4.3733 12.3713 4.20241 12.5795 4.10149 12.8231C4.00057 13.0668 3.97417 13.3349 4.02561 13.5935C4.07706 13.8521 4.20405 14.0897 4.39052 14.2762C4.57699 14.4627 4.81457 14.5897 5.07321 14.6411C5.33185 14.6925 5.59994 14.6661 5.84357 14.5652C6.08721 14.4643 6.29545 14.2934 6.44195 14.0741C6.58846 13.8549 6.66666 13.5971 6.66666 13.3334C6.66666 12.9798 6.52619 12.6406 6.27614 12.3906C6.02609 12.1405 5.68695 12.0001 5.33333 12.0001ZM14.3333 2.66672H13.6667C13.5783 2.66672 13.4935 2.70184 13.431 2.76435C13.3684 2.82686 13.3333 2.91165 13.3333 3.00005V3.33338C13.3312 3.65314 13.2486 3.96721 13.0933 4.24672L11.52 7.00005C11.4686 7.09088 11.3965 7.16835 11.3097 7.22625C11.2228 7.28415 11.1236 7.32084 11.02 7.33339H6.86666C6.75032 7.33268 6.63619 7.30155 6.5356 7.24307C6.43502 7.18459 6.3515 7.10081 6.29333 7.00005L3.43999 2.00005C3.32252 1.79658 3.15337 1.62776 2.94967 1.51069C2.74596 1.39362 2.51494 1.33245 2.27999 1.33338H1.66666C1.57826 1.33338 1.49347 1.3685 1.43096 1.43102C1.36845 1.49353 1.33333 1.57831 1.33333 1.66672V2.33338C1.33333 2.42179 1.36845 2.50657 1.43096 2.56909C1.49347 2.6316 1.57826 2.66672 1.66666 2.66672H2.27999L5.13333 7.66005C5.18534 7.74368 5.24565 7.82185 5.31333 7.89339L4.07333 10.3601C4.03535 10.4332 4.01552 10.5143 4.01552 10.5967C4.01552 10.6791 4.03535 10.7603 4.07333 10.8334L4.21999 11.0867C4.26597 11.1637 4.33154 11.227 4.41001 11.2704C4.48848 11.3137 4.57704 11.3355 4.66666 11.3334H13C13.0884 11.3334 13.1732 11.2983 13.2357 11.2358C13.2982 11.1732 13.3333 11.0885 13.3333 11.0001V10.3334C13.3333 10.245 13.2982 10.1602 13.2357 10.0977C13.1732 10.0352 13.0884 10.0001 13 10.0001H5.74666L6.41333 8.60672C6.55269 8.64348 6.6959 8.66362 6.83999 8.66672H10.9933C11.3359 8.65983 11.6707 8.56325 11.9643 8.38662C12.2579 8.20999 12.5001 7.95947 12.6667 7.66005L14.2333 4.90672C14.5125 4.42902 14.6618 3.88664 14.6667 3.33338V3.00005C14.6667 2.91165 14.6315 2.82686 14.569 2.76435C14.5065 2.70184 14.4217 2.66672 14.3333 2.66672ZM10.6667 3.58672V3.08005C10.6667 2.99165 10.6315 2.90686 10.569 2.84435C10.5065 2.78184 10.4217 2.74672 10.3333 2.74672H9.25333V1.66672C9.25333 1.57831 9.21821 1.49353 9.1557 1.43102C9.09318 1.3685 9.0084 1.33338 8.91999 1.33338H8.41333C8.32492 1.33338 8.24014 1.3685 8.17763 1.43102C8.11511 1.49353 8.07999 1.57831 8.07999 1.66672V2.74672H6.99999C6.91159 2.74672 6.8268 2.78184 6.76429 2.84435C6.70178 2.90686 6.66666 2.99165 6.66666 3.08005V3.58672C6.66666 3.67512 6.70178 3.75991 6.76429 3.82242C6.8268 3.88493 6.91159 3.92005 6.99999 3.92005H8.07999V5.00005C8.07999 5.08846 8.11511 5.17324 8.17763 5.23575C8.24014 5.29827 8.32492 5.33338 8.41333 5.33338H8.91999C9.0084 5.33338 9.09318 5.29827 9.1557 5.23575C9.21821 5.17324 9.25333 5.08846 9.25333 5.00005V3.92005H10.3333C10.4217 3.92005 10.5065 3.88493 10.569 3.82242C10.6315 3.75991 10.6667 3.67512 10.6667 3.58672Z\"/></Icon>\n);",
    "figma.connect(IconCart, \"<FIGMA_ICONS_BASE>?node-id=27:236\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconCart size={size} /> });"
  ],
  [
    "IconHeart",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconHeart = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.60667 3.34002C5.05453 3.28078 4.49766 3.3954 4.01379 3.66787C3.52991 3.94034 3.14317 4.35708 2.90754 4.85992C2.6719 5.36276 2.59912 5.92662 2.69936 6.47281C2.79959 7.01901 3.06784 7.52028 3.46667 7.90669L8 12.4L12.5333 7.91335L12.5733 7.87335C12.8266 7.61214 13.0238 7.30186 13.1526 6.96161C13.2815 6.62136 13.3394 6.25834 13.3227 5.89488C13.3061 5.53142 13.2152 5.17521 13.0557 4.84818C12.8963 4.52115 12.6715 4.23022 12.3954 3.99328C12.1193 3.75635 11.7976 3.57842 11.4502 3.47046C11.1027 3.3625 10.7368 3.32678 10.3751 3.3655C10.0133 3.40423 9.66326 3.51658 9.34653 3.69564C9.02979 3.8747 8.75305 4.11668 8.53334 4.40669C8.47124 4.48948 8.39072 4.55669 8.29815 4.60297C8.20558 4.64926 8.1035 4.67335 8 4.67335C7.89651 4.67335 7.79443 4.64926 7.70186 4.60297C7.60929 4.55669 7.52877 4.48948 7.46667 4.40669C7.24659 4.10908 6.96697 3.86054 6.6456 3.6769C6.32422 3.49326 5.96814 3.37853 5.6 3.34002M13.4133 8.90002L8.46 13.8067C8.33539 13.9288 8.16784 13.9973 7.99334 13.9973C7.81884 13.9973 7.65129 13.9288 7.52667 13.8067L2.52667 8.86002C1.75224 8.13421 1.29785 7.13049 1.26347 6.06966C1.22909 5.00882 1.61753 3.97778 2.34334 3.20335C3.06915 2.42892 4.07287 1.97453 5.1337 1.94015C6.19453 1.90577 7.22557 2.29421 8 3.02002C8.7852 2.33553 9.80644 1.98434 10.8466 2.04114C11.8867 2.09793 12.8636 2.55823 13.5696 3.32414C14.2756 4.09006 14.655 5.10117 14.627 6.14246C14.5991 7.18374 14.166 8.17306 13.42 8.90002\"/></Icon>\n);",
    "figma.connect(IconHeart, \"<FIGMA_ICONS_BASE>?node-id=27:412\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconHeart size={size} /> });"
  ],
  [
    "IconAdd",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconAdd = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.99999 2.66663C8.1768 2.66663 8.34637 2.73686 8.47139 2.86189C8.59642 2.98691 8.66666 3.15648 8.66666 3.33329V7.33329H12.6667C12.8435 7.33329 13.013 7.40353 13.1381 7.52855C13.2631 7.65358 13.3333 7.82315 13.3333 7.99996C13.3333 8.17677 13.2631 8.34634 13.1381 8.47136C13.013 8.59639 12.8435 8.66663 12.6667 8.66663H8.66666V12.6666C8.66666 12.8434 8.59642 13.013 8.47139 13.138C8.34637 13.2631 8.1768 13.3333 7.99999 13.3333C7.82318 13.3333 7.65361 13.2631 7.52859 13.138C7.40356 13.013 7.33332 12.8434 7.33332 12.6666V8.66663H3.33332C3.15651 8.66663 2.98694 8.59639 2.86192 8.47136C2.73689 8.34634 2.66666 8.17677 2.66666 7.99996C2.66666 7.82315 2.73689 7.65358 2.86192 7.52855C2.98694 7.40353 3.15651 7.33329 3.33332 7.33329H7.33332V3.33329C7.33332 3.15648 7.40356 2.98691 7.52859 2.86189C7.65361 2.73686 7.82318 2.66663 7.99999 2.66663Z\"/></Icon>\n);",
    "figma.connect(IconAdd, \"<FIGMA_ICONS_BASE>?node-id=27:225\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconAdd size={size} /> });"
  ],
  [
    "IconGroup",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconGroup = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.58668 7.25334C6.76978 7.05684 6.99058 6.89923 7.23591 6.78992C7.48124 6.68061 7.74608 6.62183 8.01462 6.61709C8.28316 6.61235 8.5499 6.66175 8.79894 6.76234C9.04797 6.86293 9.2742 7.01265 9.46411 7.20257C9.65403 7.39248 9.80375 7.61871 9.90434 7.86774C10.0049 8.11678 10.0543 8.38352 10.0496 8.65206C10.0448 8.9206 9.98607 9.18544 9.87676 9.43077C9.76745 9.6761 9.60984 9.8969 9.41334 10.08C9.03421 10.4333 8.53275 10.6256 8.01462 10.6165C7.49648 10.6073 7.00212 10.3974 6.63569 10.031C6.26925 9.66456 6.05935 9.1702 6.05021 8.65206C6.04107 8.13393 6.2334 7.63247 6.58668 7.25334ZM8.00001 8C7.8232 8 7.65363 8.07024 7.52861 8.19526C7.40358 8.32029 7.33334 8.48986 7.33334 8.66667C7.33334 8.84348 7.40358 9.01305 7.52861 9.13807C7.65363 9.2631 7.8232 9.33333 8.00001 9.33333C8.17682 9.33333 8.34639 9.2631 8.47141 9.13807C8.59644 9.01305 8.66668 8.84348 8.66668 8.66667C8.66668 8.48986 8.59644 8.32029 8.47141 8.19526C8.34639 8.07024 8.17682 8 8.00001 8ZM6.66668 12.6667C6.48987 12.6667 6.3203 12.7369 6.19527 12.8619C6.07025 12.987 6.00001 13.1565 6.00001 13.3333V14C6.00001 14.1768 5.92977 14.3464 5.80475 14.4714C5.67972 14.5964 5.51015 14.6667 5.33334 14.6667C5.15653 14.6667 4.98696 14.5964 4.86194 14.4714C4.73691 14.3464 4.66668 14.1768 4.66668 14V13.3333C4.66668 12.8029 4.87739 12.2942 5.25246 11.9191C5.62754 11.544 6.13624 11.3333 6.66668 11.3333H9.33334C9.86378 11.3333 10.3725 11.544 10.7476 11.9191C11.1226 12.2942 11.3333 12.8029 11.3333 13.3333V14C11.3333 14.1768 11.2631 14.3464 11.1381 14.4714C11.0131 14.5964 10.8435 14.6667 10.6667 14.6667C10.4899 14.6667 10.3203 14.5964 10.1953 14.4714C10.0702 14.3464 10 14.1768 10 14V13.3333C10 13.1565 9.92977 12.987 9.80475 12.8619C9.67972 12.7369 9.51015 12.6667 9.33334 12.6667H6.66668ZM9.92001 1.92C10.1031 1.7235 10.3239 1.5659 10.5692 1.45659C10.8146 1.34727 11.0794 1.2885 11.3479 1.28376C11.6165 1.27902 11.8832 1.32842 12.1323 1.42901C12.3813 1.5296 12.6075 1.67932 12.7974 1.86923C12.9874 2.05915 13.1371 2.28537 13.2377 2.53441C13.3383 2.78344 13.3877 3.05019 13.3829 3.31873C13.3782 3.58727 13.3194 3.85211 13.2101 4.09744C13.1008 4.34277 12.9432 4.56357 12.7467 4.74667C12.3675 5.09995 11.8661 5.29228 11.3479 5.28314C10.8298 5.27399 10.3355 5.0641 9.96902 4.69766C9.60258 4.33123 9.39268 3.83687 9.38354 3.31873C9.3744 2.80059 9.56673 2.29914 9.92001 1.92ZM11.3333 2.66667C11.1565 2.66667 10.987 2.73691 10.8619 2.86193C10.7369 2.98696 10.6667 3.15652 10.6667 3.33334C10.6667 3.51015 10.7369 3.67972 10.8619 3.80474C10.987 3.92976 11.1565 4 11.3333 4C11.5102 4 11.6797 3.92976 11.8047 3.80474C11.9298 3.67972 12 3.51015 12 3.33334C12 3.15652 11.9298 2.98696 11.8047 2.86193C11.6797 2.73691 11.5102 2.66667 11.3333 2.66667ZM10.6667 6.66667C10.6667 6.48986 10.7369 6.32029 10.8619 6.19526C10.987 6.07024 11.1565 6 11.3333 6H12.6667C13.1971 6 13.7058 6.21072 14.0809 6.58579C14.456 6.96086 14.6667 7.46957 14.6667 8V8.66667C14.6667 8.84348 14.5964 9.01305 14.4714 9.13807C14.3464 9.2631 14.1768 9.33333 14 9.33333C13.8232 9.33333 13.6536 9.2631 13.5286 9.13807C13.4036 9.01305 13.3333 8.84348 13.3333 8.66667V8C13.3333 7.82319 13.2631 7.65362 13.1381 7.5286C13.0131 7.40357 12.8435 7.33334 12.6667 7.33334H11.3333C11.1565 7.33334 10.987 7.2631 10.8619 7.13807C10.7369 7.01305 10.6667 6.84348 10.6667 6.66667ZM3.25334 1.92C3.43644 1.7235 3.65724 1.5659 3.90258 1.45659C4.14791 1.34727 4.41274 1.2885 4.68128 1.28376C4.94982 1.27902 5.21657 1.32842 5.4656 1.42901C5.71464 1.5296 5.94086 1.67932 6.13078 1.86923C6.3207 2.05915 6.47041 2.28537 6.571 2.53441C6.67159 2.78344 6.72099 3.05019 6.71625 3.31873C6.71152 3.58727 6.65274 3.85211 6.54343 4.09744C6.43411 4.34277 6.27651 4.56357 6.08001 4.74667C5.70088 5.09995 5.19942 5.29228 4.68128 5.28314C4.16315 5.27399 3.66879 5.0641 3.30235 4.69766C2.93592 4.33123 2.72602 3.83687 2.71688 3.31873C2.70773 2.80059 2.90006 2.29914 3.25334 1.92ZM4.66668 2.66667C4.48987 2.66667 4.3203 2.73691 4.19527 2.86193C4.07025 2.98696 4.00001 3.15652 4.00001 3.33334C4.00001 3.51015 4.07025 3.67972 4.19527 3.80474C4.3203 3.92976 4.48987 4 4.66668 4C4.84349 4 5.01306 3.92976 5.13808 3.80474C5.26311 3.67972 5.33334 3.51015 5.33334 3.33334C5.33334 3.15652 5.26311 2.98696 5.13808 2.86193C5.01306 2.73691 4.84349 2.66667 4.66668 2.66667ZM3.33334 7.33334C3.15653 7.33334 2.98696 7.40357 2.86194 7.5286C2.73691 7.65362 2.66668 7.82319 2.66668 8V8.66667C2.66668 8.84348 2.59644 9.01305 2.47141 9.13807C2.34639 9.2631 2.17682 9.33333 2.00001 9.33333C1.8232 9.33333 1.65363 9.2631 1.52861 9.13807C1.40358 9.01305 1.33334 8.84348 1.33334 8.66667V8C1.33334 7.46957 1.54406 6.96086 1.91913 6.58579C2.2942 6.21072 2.80291 6 3.33334 6H4.66668C4.84349 6 5.01306 6.07024 5.13808 6.19526C5.26311 6.32029 5.33334 6.48986 5.33334 6.66667C5.33334 6.84348 5.26311 7.01305 5.13808 7.13807C5.01306 7.2631 4.84349 7.33334 4.66668 7.33334H3.33334Z\"/></Icon>\n);",
    "figma.connect(IconGroup, \"<FIGMA_ICONS_BASE>?node-id=86:647\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconGroup size={size} /> });"
  ],
  [
    "IconTradeIn",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconTradeIn = (props: IconProps) => (\n  <Icon {...props}><path d=\"M11.1334 3.93332L11.1601 3.99998H13.2667C14.0001 3.99998 14.6067 4.57332 14.6601 5.29998V13.2666C14.6601 13.638 14.5126 13.994 14.25 14.2566C13.9875 14.5191 13.6314 14.6666 13.2601 14.6666H9.40006C9.02876 14.6666 8.67266 14.5191 8.41011 14.2566C8.14756 13.994 8.00006 13.638 8.00006 13.2666V11.6333C6.9685 12.0232 5.8456 12.1036 4.76901 11.8647C3.69242 11.6258 2.70893 11.078 1.93911 10.2883C1.1693 9.49872 0.646612 8.50163 0.435132 7.41932C0.223652 6.33701 0.33257 5.21651 0.748533 4.19518C1.1645 3.17386 1.86943 2.29611 2.7769 1.66952C3.68438 1.04294 4.75497 0.694757 5.85741 0.667665C6.95986 0.640574 8.04626 0.935748 8.98341 1.517C9.92057 2.09825 10.6678 2.94033 11.1334 3.93998M13.2667 5.33332H9.40006C9.38238 5.33332 9.36542 5.34034 9.35292 5.35284C9.34042 5.36535 9.33339 5.3823 9.33339 5.39998V13.2666C9.33339 13.3111 9.35562 13.3333 9.40006 13.3333H13.2667C13.2844 13.3333 13.3014 13.3263 13.3139 13.3138C13.3264 13.3013 13.3334 13.2843 13.3334 13.2666V5.39998C13.3334 5.3823 13.3264 5.36535 13.3139 5.35284C13.3014 5.34034 13.2844 5.33332 13.2667 5.33332ZM11.3334 11.3333C11.5102 11.3333 11.6798 11.4036 11.8048 11.5286C11.9298 11.6536 12.0001 11.8232 12.0001 12C12.0001 12.1768 11.9298 12.3464 11.8048 12.4714C11.6798 12.5964 11.5102 12.6666 11.3334 12.6666C11.1566 12.6666 10.987 12.5964 10.862 12.4714C10.737 12.3464 10.6667 12.1768 10.6667 12C10.6667 11.8232 10.737 11.6536 10.862 11.5286C10.987 11.4036 11.1566 11.3333 11.3334 11.3333ZM4.16673 2.39998C3.12354 2.88621 2.31624 3.76693 1.92241 4.84839C1.52858 5.92985 1.5805 7.12347 2.06673 8.16665C2.55296 9.20984 3.43368 10.0171 4.51514 10.411C5.5966 10.8048 6.79021 10.7529 7.83339 10.2666L8.00006 10.2066V5.39998C8.00006 4.62665 8.62673 3.99998 9.40006 3.99998H9.65339C9.08866 3.11301 8.22067 2.46163 7.21122 2.16726C6.20176 1.87288 5.11971 1.9556 4.16673 2.39998Z\"/><path d=\"M6.88673 3.81998C6.53842 3.69741 6.16845 3.6485 5.80026 3.67637C5.43206 3.70424 5.07367 3.80826 4.74778 3.98187C4.42188 4.15547 4.13559 4.39486 3.90704 4.68487C3.67849 4.97488 3.51267 5.3092 3.42006 5.66665H3.33339C3.15658 5.66665 2.98701 5.73689 2.86199 5.86191C2.73696 5.98694 2.66673 6.15651 2.66673 6.33332C2.66673 6.51013 2.73696 6.6797 2.86199 6.80472C2.98701 6.92975 3.15658 6.99998 3.33339 6.99998H3.42006C3.51267 7.35743 3.67849 7.69175 3.90704 7.98176C4.13559 8.27178 4.42188 8.51117 4.74778 8.68477C5.07367 8.85837 5.43206 8.9624 5.80026 8.99026C6.16845 9.01813 6.53842 8.96922 6.88673 8.84665C7.03875 8.77797 7.1595 8.65479 7.22514 8.50143C7.29078 8.34807 7.29654 8.17568 7.24128 8.01828C7.18602 7.86088 7.07377 7.72992 6.92667 7.65124C6.77957 7.57257 6.60832 7.5519 6.44673 7.59332C6.15274 7.69708 5.83169 7.69454 5.53938 7.58614C5.24707 7.47774 5.00198 7.27034 4.84673 6.99998H5.33339C5.5102 6.99998 5.67977 6.92975 5.8048 6.80472C5.92982 6.6797 6.00006 6.51013 6.00006 6.33332C6.00006 6.15651 5.92982 5.98694 5.8048 5.86191C5.67977 5.73689 5.5102 5.66665 5.33339 5.66665H4.84673C5.00198 5.3963 5.24707 5.18889 5.53938 5.08049C5.83169 4.9721 6.15274 4.96956 6.44673 5.07332C6.60832 5.11473 6.77957 5.09407 6.92667 5.01539C7.07377 4.93672 7.18602 4.80575 7.24128 4.64836C7.29654 4.49096 7.29078 4.31856 7.22514 4.1652C7.1595 4.01184 7.03875 3.88866 6.88673 3.81998Z\"/></Icon>\n);",
    "figma.connect(IconTradeIn, \"<FIGMA_ICONS_BASE>?node-id=27:434\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconTradeIn size={size} /> });"
  ],
  [
    "IconHome",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconHome = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.59338 1.47336C7.70996 1.38362 7.85294 1.33496 8.00005 1.33496C8.14716 1.33496 8.29014 1.38362 8.40672 1.47336L14.4067 6.14003C14.5164 6.22513 14.5967 6.34234 14.6366 6.4753C14.6764 6.60827 14.6738 6.75035 14.629 6.88174C14.5842 7.01313 14.4996 7.12726 14.3868 7.20822C14.2741 7.28918 14.1389 7.33293 14 7.33336H13.3334V13.3334C13.3334 13.5102 13.2631 13.6797 13.1381 13.8048C13.0131 13.9298 12.8435 14 12.6667 14H9.33338C9.15657 14 8.987 13.9298 8.86198 13.8048C8.73695 13.6797 8.66672 13.5102 8.66672 13.3334V11.3334L8.65338 11.2334C8.63609 11.1419 8.60928 11.0525 8.57338 10.9667C8.52955 10.8891 8.47061 10.8211 8.40005 10.7667C8.33338 10.72 8.22005 10.6667 8.00005 10.6667C7.78005 10.6667 7.66672 10.72 7.60005 10.76C7.52949 10.8144 7.47055 10.8824 7.42672 10.96C7.37709 11.0814 7.34564 11.2095 7.33338 11.34V13.3334C7.33338 13.5102 7.26314 13.6797 7.13812 13.8048C7.0131 13.9298 6.84353 14 6.66672 14H3.33338C3.15657 14 2.987 13.9298 2.86198 13.8048C2.73695 13.6797 2.66672 13.5102 2.66672 13.3334V7.33336H2.00005C1.86124 7.33293 1.72603 7.28918 1.61328 7.20822C1.50053 7.12726 1.41586 7.01313 1.37108 6.88174C1.32631 6.75035 1.32366 6.60827 1.36351 6.4753C1.40336 6.34234 1.48372 6.22513 1.59338 6.14003L7.59338 1.47336ZM3.75338 6.14669C3.83073 6.20944 3.89303 6.28872 3.93572 6.3787C3.97841 6.46869 4.00039 6.5671 4.00005 6.66669V12.6667H6.00005V11.3334V11.2267C6.03115 10.9286 6.11229 10.6378 6.24005 10.3667C6.36005 10.12 6.55338 9.86003 6.86005 9.65336C7.17116 9.44892 7.55116 9.34225 8.00005 9.33336C8.45338 9.33336 8.83338 9.44003 9.14005 9.65336C9.44672 9.85336 9.64005 10.12 9.76005 10.3667C9.90412 10.6577 9.98587 10.9756 10 11.3V11.3267L9.33338 11.3334H10V12.6667H12V6.66669C11.9997 6.5671 12.0217 6.46869 12.0644 6.3787C12.1071 6.28872 12.1694 6.20944 12.2467 6.14669L8.00005 2.84669L3.75338 6.14669Z\"/></Icon>\n);",
    "figma.connect(IconHome, \"<FIGMA_ICONS_BASE>?node-id=27:336\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconHome size={size} /> });"
  ],
  [
    "IconRecycle",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconRecycle = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 7.58661C12.153 7.4997 12.3343 7.47685 12.5041 7.52307C12.674 7.56928 12.8187 7.68079 12.9066 7.83328L14.3533 10.3333C14.5289 10.6374 14.6213 10.9824 14.6212 11.3336C14.6212 11.6848 14.5287 12.0298 14.353 12.3338C14.1773 12.6379 13.9246 12.8904 13.6204 13.0658C13.3162 13.2413 12.9711 13.3335 12.62 13.3333H8.66663C8.48982 13.3333 8.32025 13.263 8.19523 13.138C8.0702 13.013 7.99996 12.8434 7.99996 12.6666C7.99996 12.4898 8.0702 12.3202 8.19523 12.1952C8.32025 12.0702 8.48982 11.9999 8.66663 11.9999H12.62C12.7366 11.9992 12.8511 11.9679 12.9519 11.9091C13.0527 11.8503 13.1363 11.7661 13.1943 11.6649C13.2523 11.5637 13.2828 11.449 13.2826 11.3323C13.2824 11.2156 13.2516 11.101 13.1933 10.9999L11.7533 8.49995C11.7092 8.42386 11.6806 8.3398 11.6692 8.25261C11.6577 8.16543 11.6636 8.07684 11.6865 7.99194C11.7095 7.90705 11.749 7.82753 11.8028 7.75797C11.8566 7.6884 11.9236 7.63017 12 7.58661Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.4733 10.8666C10.5954 10.9912 10.6639 11.1588 10.6639 11.3333C10.6639 11.5078 10.5954 11.6753 10.4733 11.7999L9.13996 13.1333C9.01217 13.2355 8.85123 13.2872 8.68781 13.2784C8.52438 13.2697 8.36988 13.2011 8.25375 13.0858C8.13761 12.9705 8.06795 12.8165 8.05803 12.6531C8.04811 12.4898 8.09863 12.3285 8.19996 12.1999L9.5333 10.8666C9.65821 10.7424 9.82717 10.6728 10.0033 10.6728C10.1794 10.6728 10.3484 10.7424 10.4733 10.8666Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.4666 14.4733C10.5908 14.3484 10.6605 14.1794 10.6605 14.0033C10.6605 13.8272 10.5908 13.6582 10.4666 13.5333L9.1333 12.1999C9.00478 12.0986 8.84348 12.0481 8.68012 12.058C8.51676 12.0679 8.36275 12.1376 8.24744 12.2537C8.13212 12.3699 8.06356 12.5244 8.05481 12.6878C8.04605 12.8512 8.09772 13.0122 8.19996 13.1399L9.5333 14.4733C9.65792 14.5954 9.82546 14.6639 9.99996 14.6639C10.1745 14.6639 10.342 14.5954 10.4666 14.4733ZM6.9533 12.6533C6.9533 12.8301 6.88306 12.9997 6.75804 13.1247C6.63301 13.2497 6.46344 13.3199 6.28663 13.3199H3.39996C3.04878 13.3202 2.70373 13.2279 2.39951 13.0525C2.0953 12.877 1.84264 12.6246 1.66695 12.3205C1.49126 12.0164 1.39874 11.6714 1.39868 11.3203C1.39863 10.9691 1.49104 10.6241 1.66663 10.3199L3.63996 6.89995C3.68374 6.82378 3.74209 6.75698 3.81168 6.70336C3.88126 6.64975 3.96073 6.61036 4.04554 6.58745C4.13036 6.56455 4.21885 6.55857 4.30597 6.56987C4.39309 6.58116 4.47713 6.6095 4.5533 6.65328C4.62946 6.69705 4.69626 6.7554 4.74988 6.82499C4.8035 6.89458 4.84288 6.97405 4.86579 7.05886C4.88869 7.14367 4.89467 7.23216 4.88338 7.31928C4.87208 7.4064 4.84374 7.49045 4.79996 7.56661L2.81996 10.9866C2.76134 11.0882 2.73053 11.2034 2.73065 11.3206C2.73076 11.4379 2.7618 11.553 2.82062 11.6544C2.87945 11.7559 2.96399 11.84 3.0657 11.8983C3.16742 11.9566 3.28272 11.9871 3.39996 11.9866H6.28663C6.46344 11.9866 6.63301 12.0569 6.75804 12.1819C6.88306 12.3069 6.9533 12.4765 6.9533 12.6533Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.87996 9.69995C4.71026 9.74493 4.52966 9.72115 4.37738 9.63377C4.22511 9.5464 4.11344 9.40249 4.06663 9.23328L3.5733 7.40661C3.52733 7.23511 3.55137 7.05236 3.64014 6.89858C3.7289 6.7448 3.87512 6.63258 4.04663 6.58661C4.21814 6.54064 4.40088 6.56468 4.55466 6.65345C4.70844 6.74222 4.82066 6.88844 4.86663 7.05995L5.3533 8.88661C5.39804 9.05722 5.37335 9.23861 5.28463 9.39105C5.19591 9.54349 5.0504 9.65457 4.87996 9.69995Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.7533 7.89328C1.80011 8.06249 1.91177 8.2064 2.06405 8.29377C2.21633 8.38115 2.39693 8.40493 2.56663 8.35995L4.38663 7.87328C4.47586 7.85546 4.56049 7.81957 4.63532 7.76782C4.71015 7.71606 4.7736 7.64954 4.82175 7.57234C4.86991 7.49514 4.90175 7.4089 4.91531 7.31893C4.92888 7.22896 4.92389 7.13716 4.90064 7.0492C4.8774 6.96123 4.83639 6.87895 4.78015 6.80743C4.72391 6.73591 4.65362 6.67665 4.57362 6.63332C4.49362 6.58998 4.40559 6.56349 4.31496 6.55545C4.22433 6.54742 4.13301 6.55802 4.04663 6.58661L2.21996 7.07328C2.13545 7.09642 2.05632 7.136 1.98711 7.18975C1.9179 7.2435 1.85997 7.31037 1.81663 7.38653C1.77329 7.46269 1.74538 7.54665 1.73452 7.6336C1.72365 7.72055 1.73003 7.8088 1.7533 7.89328ZM5.06663 5.73995C4.91414 5.652 4.80263 5.50731 4.75642 5.33746C4.7102 5.1676 4.73305 4.98636 4.81996 4.83328L6.26663 2.33328C6.44199 2.02864 6.69455 1.7756 6.99885 1.59965C7.30315 1.4237 7.64846 1.33105 7.99996 1.33105C8.35147 1.33105 8.69677 1.4237 9.00108 1.59965C9.30538 1.7756 9.55793 2.02864 9.7333 2.33328L11.7066 5.75328C11.7549 5.82916 11.7873 5.91401 11.8018 6.00273C11.8164 6.09145 11.8129 6.18221 11.7915 6.26954C11.7702 6.35687 11.7313 6.43897 11.6774 6.5109C11.6234 6.58284 11.5555 6.64311 11.4776 6.68811C11.3998 6.7331 11.3137 6.76189 11.2244 6.77273C11.1352 6.78357 11.0446 6.77625 10.9583 6.7512C10.8719 6.72615 10.7915 6.68389 10.7219 6.62696C10.6523 6.57003 10.595 6.49962 10.5533 6.41995L8.5733 2.99995C8.51469 2.89892 8.43058 2.81506 8.32937 2.75677C8.22817 2.69848 8.11342 2.66779 7.99663 2.66779C7.87984 2.66779 7.76509 2.69848 7.66389 2.75677C7.56268 2.81506 7.47857 2.89892 7.41996 2.99995L5.97996 5.49995C5.93586 5.57578 5.87721 5.64217 5.8074 5.69529C5.73758 5.74842 5.65797 5.78724 5.57312 5.80954C5.48827 5.83183 5.39985 5.83716 5.31294 5.82522C5.22602 5.81328 5.14232 5.7843 5.06663 5.73995Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.66663 5.42661C8.71201 5.25617 8.82308 5.11066 8.97553 5.02195C9.12797 4.93323 9.30936 4.90854 9.47996 4.95328L11.3 5.43995C11.4652 5.49061 11.6044 5.60348 11.688 5.75475C11.7716 5.90602 11.7932 6.08387 11.7483 6.25077C11.7033 6.41767 11.5953 6.56058 11.447 6.64936C11.2986 6.73814 11.1216 6.76583 10.9533 6.72661L9.1333 6.23995C8.96409 6.19314 8.82018 6.08147 8.7328 5.92919C8.64543 5.77691 8.62165 5.59632 8.66663 5.42661Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M11.7933 3.61995C11.7088 3.59668 11.6206 3.5903 11.5336 3.60116C11.4467 3.61203 11.3627 3.63993 11.2865 3.68328C11.2104 3.72662 11.1435 3.78455 11.0898 3.85376C11.036 3.92297 10.9964 4.00209 10.9733 4.08661L10.4866 5.91328C10.4604 5.99882 10.4517 6.08877 10.4609 6.17776C10.4702 6.26675 10.4973 6.35296 10.5406 6.43126C10.5839 6.50956 10.6425 6.57834 10.7129 6.63352C10.7834 6.68869 10.8642 6.72911 10.9506 6.75239C11.037 6.77567 11.1272 6.78131 11.2158 6.769C11.3044 6.75668 11.3896 6.72665 11.4664 6.6807C11.5432 6.63475 11.6099 6.57382 11.6626 6.50153C11.7154 6.42924 11.753 6.34708 11.7733 6.25995L12.2666 4.43328C12.3114 4.26267 12.2867 4.08128 12.198 3.92884C12.1092 3.7764 11.9637 3.66533 11.7933 3.61995Z\"/></Icon>\n);",
    "figma.connect(IconRecycle, \"<FIGMA_ICONS_BASE>?node-id=27:347\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconRecycle size={size} /> });"
  ],
  [
    "IconChevronUp",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconChevronUp = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.53724 10.4688C3.66186 10.5909 3.8294 10.6594 4.00391 10.6594C4.17841 10.6594 4.34595 10.5909 4.47057 10.4688L8.00391 6.94213L11.5372 10.4755C11.6519 10.5882 11.8034 10.6556 11.9639 10.6654C12.1244 10.6752 12.283 10.6267 12.4106 10.5288L12.4772 10.4755C12.5397 10.4135 12.5893 10.3398 12.6232 10.2585C12.657 10.1773 12.6744 10.0901 12.6744 10.0021C12.6744 9.91412 12.657 9.82699 12.6232 9.74575C12.5893 9.66451 12.5397 9.59077 12.4772 9.5288L8.47724 5.5288C8.41526 5.46631 8.34153 5.41672 8.26029 5.38287C8.17905 5.34902 8.09191 5.3316 8.00391 5.3316C7.9159 5.3316 7.82876 5.34902 7.74752 5.38287C7.66628 5.41672 7.59255 5.46631 7.53057 5.5288L3.53057 9.5288C3.46809 9.59077 3.41849 9.66451 3.38465 9.74575C3.3508 9.82699 3.33337 9.91412 3.33337 10.0021C3.33337 10.0901 3.3508 10.1773 3.38465 10.2585C3.41849 10.3398 3.46809 10.4135 3.53057 10.4755\"/></Icon>\n);",
    "figma.connect(IconChevronUp, \"<FIGMA_ICONS_BASE>?node-id=27:489\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconChevronUp size={size} /> });"
  ],
  [
    "IconChevronRight",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconChevronRight = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.53114 3.52388C5.65576 3.40173 5.82331 3.33331 5.99781 3.33331C6.17231 3.33331 6.33986 3.40173 6.46448 3.52388L10.4645 7.52388C10.5866 7.6485 10.655 7.81605 10.655 7.99055C10.655 8.16505 10.5866 8.3326 10.4645 8.45722L6.46448 12.4572C6.33609 12.5535 6.17729 12.6003 6.01722 12.5889C5.85714 12.5775 5.70654 12.5088 5.59307 12.3953C5.4796 12.2818 5.41086 12.1312 5.39949 11.9711C5.38811 11.8111 5.43486 11.6523 5.53114 11.5239L9.05781 7.99055L5.52448 4.45722C5.41176 4.34255 5.34429 4.19101 5.33449 4.03052C5.32469 3.87004 5.37322 3.71141 5.47114 3.58388L5.53114 3.52388Z\"/></Icon>\n);",
    "figma.connect(IconChevronRight, \"<FIGMA_ICONS_BASE>?node-id=27:468\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconChevronRight size={size} /> });"
  ],
  [
    "IconChevronLeft",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconChevronLeft = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.4687 3.52388C10.3441 3.40173 10.1766 3.33331 10.0021 3.33331C9.82757 3.33331 9.66002 3.40173 9.5354 3.52388L5.5354 7.52388C5.41325 7.6485 5.34483 7.81605 5.34483 7.99055C5.34483 8.16505 5.41325 8.3326 5.5354 8.45722L9.5354 12.4572C9.66378 12.5535 9.82259 12.6003 9.98266 12.5889C10.1427 12.5775 10.2933 12.5088 10.4068 12.3953C10.5203 12.2818 10.589 12.1312 10.6004 11.9711C10.6118 11.8111 10.565 11.6523 10.4687 11.5239L6.94207 7.99055L10.4754 4.45722C10.5881 4.34255 10.6556 4.19101 10.6654 4.03052C10.6752 3.87004 10.6267 3.71141 10.5287 3.58388L10.4687 3.52388Z\"/></Icon>\n);",
    "figma.connect(IconChevronLeft, \"<FIGMA_ICONS_BASE>?node-id=27:447\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconChevronLeft size={size} /> });"
  ],
  [
    "IconDocument",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconDocument = (props: IconProps) => (\n  <Icon {...props}><path d=\"M9.05716 1.33331C9.23395 1.33333 9.40349 1.40357 9.52849 1.52858L13.138 5.13805C13.2631 5.26307 13.3333 5.43264 13.3333 5.60945V13.3333C13.3333 14.0697 12.7364 14.6666 12 14.6666H3.99996C3.26356 14.6666 2.66663 14.0697 2.66663 13.3333V2.66665C2.66663 1.93025 3.26356 1.33331 3.99996 1.33331H9.05716ZM7.99996 2.66665H3.99996V13.3333H12V6.66665H9.33329C8.63036 6.66665 8.05449 6.12271 8.00363 5.43285L7.99996 5.33331V2.66665ZM10.6666 9.99998V11.3333H5.33329V9.99998H10.6666ZM10.6666 7.99998V9.33331H5.33329V7.99998H10.6666ZM7.33329 5.99998V7.33331H5.33329V5.99998H7.33329ZM9.33329 3.21931V5.33331H11.4473L9.33329 3.21931Z\"/></Icon>\n);",
    "figma.connect(IconDocument, \"<FIGMA_ICONS_BASE>?node-id=27:369\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconDocument size={size} /> });"
  ],
  [
    "IconComplaint",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconComplaint = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.6666 3.33331C14.6666 2.80288 14.4559 2.29417 14.0809 1.9191C13.7058 1.54403 13.1971 1.33331 12.6666 1.33331H3.33331C2.80288 1.33331 2.29417 1.54403 1.9191 1.9191C1.54403 2.29417 1.33331 2.80288 1.33331 3.33331V9.73331C1.33331 9.99596 1.38504 10.256 1.48555 10.4987C1.58606 10.7413 1.73338 10.9618 1.9191 11.1475C2.10482 11.3332 2.32529 11.4806 2.56795 11.5811C2.8106 11.6816 3.07067 11.7333 3.33331 11.7333H7.14665L10.22 14.4933C10.3156 14.5796 10.4342 14.6364 10.5614 14.6567C10.6886 14.6771 10.819 14.6601 10.9367 14.6079C11.0545 14.5557 11.1546 14.4705 11.225 14.3627C11.2954 14.2548 11.333 14.1288 11.3333 14V11.7333H12.6666C13.1971 11.7333 13.7058 11.5226 14.0809 11.1475C14.4559 10.7725 14.6666 10.2637 14.6666 9.73331V3.33331ZM12.6666 2.66665C12.8435 2.66665 13.013 2.73688 13.1381 2.86191C13.2631 2.98693 13.3333 3.1565 13.3333 3.33331V9.73331C13.3333 9.91012 13.2631 10.0797 13.1381 10.2047C13.013 10.3297 12.8435 10.4 12.6666 10.4H10.6666C10.4898 10.4 10.3203 10.4702 10.1952 10.5952C10.0702 10.7203 9.99998 10.8898 9.99998 11.0666V12.5066L7.84665 10.5733C7.72438 10.4622 7.5652 10.4004 7.39998 10.4H3.33331C3.1565 10.4 2.98693 10.3297 2.86191 10.2047C2.73688 10.0797 2.66665 9.91012 2.66665 9.73331V3.33331C2.66665 3.1565 2.73688 2.98693 2.86191 2.86191C2.98693 2.73688 3.1565 2.66665 3.33331 2.66665H12.6666Z\"/><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.99998 3.99998C8.17679 3.99998 8.34636 4.07022 8.47138 4.19524C8.59641 4.32027 8.66665 4.48984 8.66665 4.66665V6.66665C8.66665 6.84346 8.59641 7.01303 8.47138 7.13805C8.34636 7.26308 8.17679 7.33331 7.99998 7.33331C7.82317 7.33331 7.6536 7.26308 7.52857 7.13805C7.40355 7.01303 7.33331 6.84346 7.33331 6.66665V4.66665C7.33331 4.48984 7.40355 4.32027 7.52857 4.19524C7.6536 4.07022 7.82317 3.99998 7.99998 3.99998ZM7.33331 8.66665C7.33331 8.48984 7.40355 8.32027 7.52857 8.19524C7.6536 8.07022 7.82317 7.99998 7.99998 7.99998H8.00665C8.18346 7.99998 8.35303 8.07022 8.47805 8.19524C8.60307 8.32027 8.67331 8.48984 8.67331 8.66665C8.67331 8.84346 8.60307 9.01303 8.47805 9.13805C8.35303 9.26308 8.18346 9.33331 8.00665 9.33331H7.99998C7.82317 9.33331 7.6536 9.26308 7.52857 9.13805C7.40355 9.01303 7.33331 8.84346 7.33331 8.66665Z\"/></Icon>\n);",
    "figma.connect(IconComplaint, \"<FIGMA_ICONS_BASE>?node-id=27:390\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconComplaint size={size} /> });"
  ],
  [
    "IconSupport",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconSupport = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 2.66665C6.76232 2.66665 5.57534 3.15831 4.70017 4.03348C3.825 4.90865 3.33333 6.09564 3.33333 7.33331V7.44665C3.54751 7.3713 3.77296 7.33298 4 7.33331H4.66667C5.1971 7.33331 5.70581 7.54403 6.08088 7.9191C6.45595 8.29417 6.66667 8.80288 6.66667 9.33331V11.3333C6.66667 11.8637 6.45595 12.3725 6.08088 12.7475C5.70581 13.1226 5.1971 13.3333 4.66667 13.3333H4C3.46957 13.3333 2.96086 13.1226 2.58579 12.7475C2.21071 12.3725 2 11.8637 2 11.3333V7.33331C2 6.54538 2.15519 5.76517 2.45672 5.03721C2.75825 4.30926 3.20021 3.64782 3.75736 3.09067C4.31451 2.53352 4.97595 2.09156 5.7039 1.79004C6.43185 1.48851 7.21207 1.33331 8 1.33331C8.78793 1.33331 9.56815 1.48851 10.2961 1.79004C11.0241 2.09156 11.6855 2.53352 12.2426 3.09067C12.7998 3.64782 13.2417 4.30926 13.5433 5.03721C13.8448 5.76517 14 6.54538 14 7.33331V11.3333C14.0004 11.7652 13.861 12.1856 13.6027 12.5317C13.3443 12.8778 12.9809 13.1309 12.5667 13.2533C12.2817 13.892 11.768 14.401 11.1267 14.68C10.2933 15.0933 9.18667 15.3333 8 15.3333C7.82319 15.3333 7.65362 15.2631 7.5286 15.1381C7.40357 15.013 7.33333 14.8435 7.33333 14.6666C7.33333 14.4898 7.40357 14.3203 7.5286 14.1952C7.65362 14.0702 7.82319 14 8 14C9.02667 14 9.92 13.7933 10.5333 13.4866C10.6667 13.42 10.7822 13.3533 10.88 13.2866C10.4392 13.1841 10.0463 12.935 9.76534 12.5802C9.48441 12.2254 9.33211 11.7859 9.33333 11.3333V9.33331C9.33333 8.80288 9.54405 8.29417 9.91912 7.9191C10.2942 7.54403 10.8029 7.33331 11.3333 7.33331H12C12.227 7.33298 12.4525 7.3713 12.6667 7.44665V7.33331C12.6667 6.09564 12.175 4.90865 11.2998 4.03348C10.4247 3.15831 9.23768 2.66665 8 2.66665ZM12.6667 9.33331C12.6667 9.1565 12.5964 8.98693 12.4714 8.86191C12.3464 8.73688 12.1768 8.66665 12 8.66665H11.3333C11.1565 8.66665 10.987 8.73688 10.8619 8.86191C10.7369 8.98693 10.6667 9.1565 10.6667 9.33331V11.3333C10.6667 11.5101 10.7369 11.6797 10.8619 11.8047C10.987 11.9297 11.1565 12 11.3333 12H12C12.1768 12 12.3464 11.9297 12.4714 11.8047C12.5964 11.6797 12.6667 11.5101 12.6667 11.3333V9.33331ZM3.33333 9.33331V11.3333C3.33333 11.5101 3.40357 11.6797 3.5286 11.8047C3.65362 11.9297 3.82319 12 4 12H4.66667C4.84348 12 5.01305 11.9297 5.13807 11.8047C5.2631 11.6797 5.33333 11.5101 5.33333 11.3333V9.33331C5.33333 9.1565 5.2631 8.98693 5.13807 8.86191C5.01305 8.73688 4.84348 8.66665 4.66667 8.66665H4C3.82319 8.66665 3.65362 8.73688 3.5286 8.86191C3.40357 8.98693 3.33333 9.1565 3.33333 9.33331Z\"/></Icon>\n);",
    "figma.connect(IconSupport, \"<FIGMA_ICONS_BASE>?node-id=27:401\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconSupport size={size} /> });"
  ],
  [
    "IconRefurbished",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconRefurbished = (props: IconProps) => (\n  <Icon {...props}><path d=\"M2.90665 6.24669C2.98541 6.28538 3.07104 6.30813 3.15862 6.31364C3.24619 6.31916 3.33399 6.30734 3.41699 6.27885C3.49999 6.25035 3.57654 6.20576 3.64226 6.14762C3.70799 6.08947 3.76158 6.01893 3.79998 5.94003C3.95998 5.58447 4.13554 5.28447 4.32665 5.04003C5.00393 4.17331 5.9772 3.58697 7.05998 3.39336C8.12665 3.20669 9.21998 3.43336 10.1333 4.02669C10.7711 4.44876 11.2954 5.0211 11.66 5.69336L9.86665 5.53336C9.77903 5.52512 9.69065 5.5343 9.60661 5.56038C9.52256 5.58647 9.44451 5.62893 9.37695 5.68533C9.3094 5.74173 9.25368 5.81095 9.21301 5.88899C9.17233 5.96703 9.14752 6.05235 9.13998 6.14003C9.13174 6.22764 9.14092 6.31602 9.16701 6.40007C9.19309 6.48412 9.23556 6.56217 9.29196 6.62972C9.34835 6.69728 9.41757 6.753 9.49561 6.79367C9.57365 6.83434 9.65897 6.85916 9.74665 6.86669L12.94 7.15336C13.0276 7.1616 13.116 7.15242 13.2 7.12633C13.2841 7.10025 13.3621 7.05779 13.4297 7.00139C13.4972 6.94499 13.553 6.87577 13.5936 6.79773C13.6343 6.71969 13.6591 6.63437 13.6667 6.54669L13.9667 3.22669C13.9749 3.13908 13.9657 3.0507 13.9396 2.96665C13.9135 2.8826 13.8711 2.80455 13.8147 2.73699C13.7583 2.66944 13.6891 2.61372 13.611 2.57305C13.533 2.53238 13.4477 2.50756 13.36 2.50003C13.2724 2.49178 13.184 2.50097 13.0999 2.52705C13.0159 2.55313 12.9378 2.5956 12.8703 2.652C12.8027 2.7084 12.747 2.77761 12.7063 2.85565C12.6657 2.93369 12.6409 3.01901 12.6333 3.10669L12.5066 4.52669C11.8928 3.61858 11.0315 2.90546 10.0248 2.47183C9.01814 2.03819 7.90825 1.90222 6.82665 2.08003C5.4189 2.33095 4.15347 3.09306 3.27332 4.22003C3.0075 4.57402 2.78169 4.95635 2.59998 5.36003C2.5613 5.43879 2.53855 5.52441 2.53303 5.61199C2.52751 5.69957 2.53934 5.78737 2.56783 5.87037C2.59632 5.95336 2.64092 6.02992 2.69906 6.09564C2.7572 6.16136 2.82775 6.21496 2.90665 6.25336V6.24669ZM13.3 7.99336C13.2133 7.98011 13.1248 7.98409 13.0397 8.00508C12.9546 8.02607 12.8744 8.06365 12.8038 8.11567C12.7332 8.16769 12.6735 8.23313 12.6283 8.30823C12.583 8.38334 12.553 8.46664 12.54 8.55336C12.4728 9.16913 12.2166 9.749 11.8066 10.2134C11.5028 9.6067 11.0336 9.09828 10.4533 8.74669C9.53332 8.20669 8.35998 8.12003 6.97332 8.57336C4.82665 9.20003 3.59332 8.00669 3.33332 7.62003C3.26175 7.51296 3.16071 7.42891 3.04241 7.37804C2.9241 7.32716 2.79359 7.31165 2.66665 7.33336C2.40665 7.38003 2.19998 7.57336 2.13332 7.82669V7.84003L2.11998 7.88003L2.09332 8.01336C2.07109 8.12892 2.05109 8.28003 2.03332 8.46669C1.99998 8.84669 1.98665 9.37336 2.07998 9.96669C2.20008 10.7384 2.49028 11.4737 2.92959 12.1194C3.36889 12.7651 3.94629 13.305 4.61998 13.7C5.37638 14.1669 6.22259 14.4693 7.10356 14.5876C7.98453 14.7059 8.88054 14.6375 9.73332 14.3867L9.82665 14.3534L9.84665 14.3467H9.85998L9.93998 14.32C10.0111 14.2978 10.1 14.26 10.2066 14.2067C10.42 14.1067 10.7066 13.9534 10.9933 13.7267C11.3273 13.4798 11.6065 13.1663 11.8131 12.806C12.0196 12.4456 12.1491 12.0463 12.1933 11.6334C12.3711 11.5134 12.54 11.3734 12.7 11.2134C13.3471 10.5428 13.7568 9.67876 13.8666 8.75336C13.8799 8.66667 13.8759 8.57822 13.8549 8.49308C13.8339 8.40793 13.7964 8.32776 13.7443 8.25717C13.6923 8.18657 13.6269 8.12693 13.5518 8.08166C13.4767 8.03639 13.3934 8.00638 13.3067 7.99336H13.3ZM8.39998 12.3067H8.41332L8.45998 12.32C8.49998 12.32 8.55109 12.3289 8.61332 12.3467C8.74665 12.3689 8.92221 12.3845 9.13998 12.3934C9.51332 12.4134 10.0066 12.4 10.5333 12.3C10.4222 12.4467 10.2955 12.5734 10.1533 12.68C9.94322 12.8451 9.7095 12.9777 9.45998 13.0734L9.41998 13.0867L9.36665 13.1067H9.35998L9.30665 13.1267L9.06665 13.1934C8.42845 13.3418 7.76723 13.3629 7.12087 13.2554C6.47451 13.1478 5.85573 12.9138 5.29998 12.5667C4.73528 12.2463 4.26033 11.7889 3.91895 11.2366C3.57758 10.6844 3.38076 10.0551 3.34665 9.40669C3.94216 9.76723 4.60896 9.99393 5.30082 10.0711C5.99267 10.1482 6.69303 10.0739 7.35332 9.85336H7.37332C8.50665 9.48003 9.26665 9.60669 9.77332 9.90669C10.1422 10.1289 10.4355 10.4622 10.6533 10.9067L10.48 10.9534C10.0133 11.0667 9.55332 11.0867 9.20665 11.0667C9.02887 11.0578 8.89109 11.0445 8.79332 11.0267L8.68665 11.0134H8.65998C8.48671 10.978 8.30648 11.0129 8.15895 11.1104C8.01143 11.208 7.90868 11.3601 7.87332 11.5334C7.83795 11.7066 7.87287 11.8869 7.97039 12.0344C8.06791 12.1819 8.22004 12.2847 8.39332 12.32L8.39998 12.3067Z\"/></Icon>\n);",
    "figma.connect(IconRefurbished, \"<FIGMA_ICONS_BASE>?node-id=27:423\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconRefurbished size={size} /> });"
  ],
  [
    "IconChevronDown",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconChevronDown = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.53718 5.5312C3.6618 5.40905 3.82934 5.34063 4.00385 5.34063C4.17835 5.34063 4.34589 5.40905 4.47051 5.5312L8.00385 9.05787L11.5372 5.52454C11.6518 5.41183 11.8034 5.34435 11.9639 5.33455C12.1244 5.32475 12.283 5.37328 12.4105 5.4712L12.4772 5.52454C12.5397 5.58651 12.5893 5.66025 12.6231 5.74148C12.657 5.82272 12.6744 5.90986 12.6744 5.99787C12.6744 6.08588 12.657 6.17301 12.6231 6.25425C12.5893 6.33549 12.5397 6.40923 12.4772 6.4712L8.47718 10.4712C8.4152 10.5337 8.34147 10.5833 8.26023 10.6171C8.17899 10.651 8.09185 10.6684 8.00385 10.6684C7.91584 10.6684 7.8287 10.651 7.74746 10.6171C7.66622 10.5833 7.59249 10.5337 7.53051 10.4712L3.53051 6.4712C3.46803 6.40923 3.41843 6.33549 3.38458 6.25425C3.35074 6.17301 3.33331 6.08588 3.33331 5.99787C3.33331 5.90986 3.35074 5.82272 3.38458 5.74148C3.41843 5.66025 3.46803 5.58651 3.53051 5.52454\"/></Icon>\n);",
    "figma.connect(IconChevronDown, \"<FIGMA_ICONS_BASE>?node-id=27:500\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconChevronDown size={size} /> });"
  ],
  [
    "IconInfo",
    "import { type IconProps, Icon } from \"primitives\";\nexport const IconInfo = (props: IconProps) => (\n  <Icon {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.99992 1.33337C6.23181 1.33337 4.53612 2.03575 3.28587 3.286C2.03563 4.53624 1.33325 6.23193 1.33325 8.00004C1.33325 9.76815 2.03563 11.4638 3.28587 12.7141C4.53612 13.9643 6.23181 14.6667 7.99992 14.6667C9.76803 14.6667 11.4637 13.9643 12.714 12.7141C13.9642 11.4638 14.6666 9.76815 14.6666 8.00004C14.6666 6.23193 13.9642 4.53624 12.714 3.286C11.4637 2.03575 9.76803 1.33337 7.99992 1.33337ZM4.22659 4.22671C5.22734 3.22596 6.58464 2.66374 7.99992 2.66374C9.41519 2.66374 10.7725 3.22596 11.7733 4.22671C12.774 5.22746 13.3362 6.58477 13.3362 8.00004C13.3362 9.41531 12.774 10.7726 11.7733 11.7734C10.7725 12.7741 9.41519 13.3363 7.99992 13.3363C6.58464 13.3363 5.22734 12.7741 4.22659 11.7734C3.22584 10.7726 2.66362 9.41531 2.66362 8.00004C2.66362 6.58477 3.22584 5.22746 4.22659 4.22671ZM7.99992 4.66671C7.82311 4.66671 7.65354 4.73695 7.52851 4.86197C7.40349 4.98699 7.33325 5.15656 7.33325 5.33337C7.33325 5.51018 7.40349 5.67975 7.52851 5.80478C7.65354 5.9298 7.82311 6.00004 7.99992 6.00004H8.00659C8.1834 6.00004 8.35297 5.9298 8.47799 5.80478C8.60301 5.67975 8.67325 5.51018 8.67325 5.33337C8.67325 5.15656 8.60301 4.98699 8.47799 4.86197C8.35297 4.73695 8.1834 4.66671 8.00659 4.66671H7.99992ZM8.67325 8.00004C8.67325 7.82323 8.60301 7.65366 8.47799 7.52864C8.35297 7.40361 8.1834 7.33337 8.00659 7.33337C7.82977 7.33337 7.6602 7.40361 7.53518 7.52864C7.41016 7.65366 7.33992 7.82323 7.33992 8.00004V10.6667C7.33992 10.8435 7.41016 11.0131 7.53518 11.1381C7.6602 11.2631 7.82977 11.3334 8.00659 11.3334C8.1834 11.3334 8.35297 11.2631 8.47799 11.1381C8.60301 11.0131 8.67325 10.8435 8.67325 10.6667V8.00004Z\"/></Icon>\n);",
    "figma.connect(IconInfo, \"<FIGMA_ICONS_BASE>?node-id=27:358\", { props: { size: figma.enum(\"size\", { \"20\": \"20\", \"24\": \"24\", \"32\": \"32\", \"40\": \"40\", \"48\": \"48\" }) }, example: ({ size }) => <IconInfo size={size} /> });"
  ]
]